PS D:\sinprl_android_apps\BInQ> emulator -list-avds
PS D:\sinprl_android_apps\BInQ> emulator -avd ASM_v30 -feature -Vulkan

privacy policy
https://www.freeprivacypolicy.com/live/b681ee42-fed4-4077-a2ea-06559c6343d9

FirebaseDatabase database = FirebaseDatabase.getInstance("https://binq-1171a-default-rtdb.asia-southeast1.firebasedatabase.app");
            DatabaseReference dbReference = database.getReference("Reasons/");

            List<Reason> reasons = new ArrayList<>();

            reasons.add(new Reason("Weakness"));
            reasons.add(new Reason("High Feaver"));
            reasons.add(new Reason("Cough"));
            reasons.add(new Reason("Temperature"));
            reasons.add(new Reason("Dizzeness"));
            reasons.add(new Reason("Vomitting"));
            reasons.add(new Reason("Dry Eyes"));
            reasons.add(new Reason("Tooth ace"));
            reasons.add(new Reason("Skin Issue"));
            reasons.add(new Reason("Other"));


            for(Reason r: reasons){
                dbReference.child(dbReference.push().getKey()).setValue(r);
            }



    /*private void show_history_for_user() {
        DatabaseReference databaseReference = database.getReference("Users/"+userID+"/Appointments/");

        user_history_list = new ArrayList<>();
        databaseReference.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot snapshot) {
                user_history_list.clear();
                for (DataSnapshot datewise_appointment_collection : snapshot.getChildren()){
                    String appointment_date = datewise_appointment_collection.getKey();
                    for (DataSnapshot appointment_snapshot: datewise_appointment_collection.getChildren())
                    {
                        //Log.d("UserHistory", "" + appointment_snapshot.getValue(Appointment.class));
                        //Log.d("reason", "" + appointment_snapshot.child("reason").getValue());
                        Appointment appointment = appointment_snapshot.getValue(Appointment.class);
                        appointment.setId(appointment_snapshot.getKey());
                        appointment.setDate_of_appointment(appointment_date);
                        user_history_list.add(appointment);
                    }
                }
                user_history_list.sort(new Appointment_Comparator());
                status.setEnabled(false);
                AppointmentListAdaptor appointmentListAdaptor = new AppointmentListAdaptor(User_Appointment_Display.this,user_history_list, User_Appointment_Display.this);
                appointment_recycle_view.setAdapter(appointmentListAdaptor);
            }
            @Override
            public void onCancelled(@NonNull DatabaseError error) {
            }
        });
    }*/